import{_ as a,c as e,o as s,a2 as t}from"./chunks/framework.BverbYjs.js";const g=JSON.parse('{"title":"Installing Artivact as Web Server","description":"","frontmatter":{},"headers":[],"relativePath":"present/installation.md","filePath":"present/installation.md"}'),n={name:"present/installation.md"},i=t(`<h1 id="installing-artivact-as-web-server" tabindex="-1">Installing Artivact as Web Server <a class="header-anchor" href="#installing-artivact-as-web-server" aria-label="Permalink to &quot;Installing Artivact as Web Server&quot;">​</a></h1><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Artivact is written in Java using the popular open source <a href="https://spring.io/" target="_blank" rel="noreferrer">Spring framework</a>. As such, the application is provided as self-contained JAR file.</p><p>The latest release can be downloaded from the project&#39;s <a href="https://github.com/arassec/artivact/releases/latest" target="_blank" rel="noreferrer">Github page</a>.</p><p>The file to download contains &#39;server&#39; in its name, e.g. <code>artivact-server-v0.0.0.jar</code></p><h2 id="startup" tabindex="-1">Startup <a class="header-anchor" href="#startup" aria-label="Permalink to &quot;Startup&quot;">​</a></h2><p>A Java JRE or JDK has to be installed in order to start the Artivact server.</p><p>The application is then started simply by calling</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; java -jar artivact-server-v0.0.0.jar</span></span></code></pre></div><p>on the command line.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The directory containing the JAR file will be used to create the <code>.avdata</code> project home, unless configured otherwise.</p></div><p>During first start the initial administrator account <code>admin</code> will be created. The password can be found in the application&#39;s log file, e.g.:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>##############################################################</span></span>
<span class="line"><span>Initial user created: admin / ebcfd5c6</span></span>
<span class="line"><span>##############################################################</span></span></code></pre></div><h2 id="linux-system-daemon" tabindex="-1">Linux System Daemon <a class="header-anchor" href="#linux-system-daemon" aria-label="Permalink to &quot;Linux System Daemon&quot;">​</a></h2><p>If you want to run Artivact on a linux server, a systemd script can be used to manage the application as system service.</p><p>First, create a new user, which will be used to run the application. Then create a directory and place the JAR in it:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; sudo useradd artivact</span></span>
<span class="line"><span>$&gt; sudo mkdir /opt/artivact-server</span></span>
<span class="line"><span>$&gt; sudo mv artivact-server-v0.0.0.jar /opt/artivact-server/</span></span>
<span class="line"><span>$&gt; sudo chown -R artivact /opt/artivact-server/</span></span></code></pre></div><p>Next, add the following file as root: <code>/etc/systemd/system/artivact-server.service</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description=Artivact Server</span></span>
<span class="line"><span>After=syslog.target</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>User=artivact</span></span>
<span class="line"><span>ExecStart=/opt/artivact-server/artivact-server-v0.0.0.jar</span></span>
<span class="line"><span>SuccessExitStatus=143</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span></code></pre></div><p>You can now use systemd commands to configure the service, e.g.:</p><ul><li>Start the application: <code>$&gt; sudo systemctl start artivact-server</code></li><li>Stop the application: <code>$&gt; sudo systemctl stop artivact-server</code></li><li>Make it boot safe: <code>$&gt; sudo systemctl enable artivact-server</code></li></ul>`,21),r=[i];function p(l,o,c,d,h,v){return s(),e("div",null,r)}const m=a(n,[["render",p]]);export{g as __pageData,m as default};
