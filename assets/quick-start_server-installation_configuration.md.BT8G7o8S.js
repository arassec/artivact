import{_ as a,c as e,o as t,a2 as s}from"./chunks/framework.DSgG5TdZ.js";const v=JSON.parse('{"title":"Configuring the Server Application","description":"","frontmatter":{},"headers":[],"relativePath":"quick-start/server-installation/configuration.md","filePath":"quick-start/server-installation/configuration.md"}'),i={name:"quick-start/server-installation/configuration.md"},r=s(`<h1 id="configuring-the-server-application" tabindex="-1">Configuring the Server Application <a class="header-anchor" href="#configuring-the-server-application" aria-label="Permalink to &quot;Configuring the Server Application&quot;">​</a></h1><h2 id="general" tabindex="-1">General <a class="header-anchor" href="#general" aria-label="Permalink to &quot;General&quot;">​</a></h2><p>Artivact is written in Java using the popular open source <a href="https://spring.io/" target="_blank" rel="noreferrer">Spring framework</a>.</p><p>Thus, it can be configured like any other Spring-Boot application, be it with JVM parameters, an application.properties file in the root directory or any other method supported by Spring.</p><h2 id="the-project-directory" tabindex="-1">The Project Directory <a class="header-anchor" href="#the-project-directory" aria-label="Permalink to &quot;The Project Directory&quot;">​</a></h2><p>The project root directory can be configured by the following parameter:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-mUCgz" id="tab-L4miBaP" checked="checked"><label for="tab-L4miBaP">Command line parameter</label><input type="radio" name="group-mUCgz" id="tab-QqZqrez"><label for="tab-QqZqrez">application.properties</label></div><div class="blocks"><div class="language- vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; java -jar artivact-server-v0.0.0.jar \\</span></span>
<span class="line"><span>        -Dartivact.project.root=/opt/artivact-server/project-root</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>artivact.project.root=/opt/artivact-server/project-root</span></span></code></pre></div></div></div><h2 id="database-configuration" tabindex="-1">Database Configuration <a class="header-anchor" href="#database-configuration" aria-label="Permalink to &quot;Database Configuration&quot;">​</a></h2><p>Artivact supports <em>H2</em> and <em>PostgreSQL</em> databases. It uses an embedded H2 database as default which will be stored in a dbdata directory in the project folder. For production use, PostgreSQL is advised. You can configure the Database to use by configuring it with standard Spring mechanisms.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xsgd8" id="tab-bXZvQHB" checked="checked"><label for="tab-bXZvQHB">Command line parameter</label><input type="radio" name="group-xsgd8" id="tab-EjKHS2U"><label for="tab-EjKHS2U">application.properties</label></div><div class="blocks"><div class="language- vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; java -jar artivact-server-v0.0.0.jar \\</span></span>
<span class="line"><span>        -Dspring.datasource.url=jdbc:postgresql://localhost:5432/postgres \\</span></span>
<span class="line"><span>        -Dspring.datasource.username=artivact \\</span></span>
<span class="line"><span>        -Dspring.datasource.password=artivact \\</span></span>
<span class="line"><span>        -Dspring.datasource.driver-class-name=org.postgresql.Driver \\</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>spring.datasource.url=jdbc:postgresql://localhost:5432/postgres</span></span>
<span class="line"><span>spring.datasource.username=artivact</span></span>
<span class="line"><span>spring.datasource.password=artivact</span></span>
<span class="line"><span>spring.datasource.driver-class-name=org.postgresql.Driver</span></span></code></pre></div></div></div><h2 id="further-customization" tabindex="-1">Further Customization <a class="header-anchor" href="#further-customization" aria-label="Permalink to &quot;Further Customization&quot;">​</a></h2><p>The following can be configured inside the application itself:</p><ul><li>Administrator and user accounts.</li><li>Application appearance like color theme, title, favicons, etc.</li><li>Supported locales for I18N.</li><li>Item properties, tags and the license for media files.</li></ul>`,13),n=[r];function o(p,c,l,d,u,h){return t(),e("div",null,n)}const b=a(i,[["render",o]]);export{v as __pageData,b as default};
